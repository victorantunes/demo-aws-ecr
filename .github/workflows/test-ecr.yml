name: Deploy Staging
on: 
  push:
    branches:
      - main
    tags:
      - '*.*.*-qa'
      - '*.*.*-main'      

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Bump version and push tag
        id: tagging
        uses: mathieudutour/github-tag-action@v4.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIATPOXWX2IFOCRNW6B
          aws-secret-access-key: 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
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cql-test
          IMAGE_TAG: main-${{ steps.tagging.outputs.new_version }}
          IMAGE_TAG_LATEST: latest
        run: |
          DOCKER_BUILDKIT=1 docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --target main .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST
      
      - name: Deploy beanstalk (Staging)
        env:
          IMAGE_TAG: main-${{ steps.tagging.outputs.new_version }}
          IMAGE_FULL: ${{ steps.login-ecr.outputs.registry }}/cql-api:main-${{ steps.tagging.outputs.new_version }}
          S3_BUCKET: eb-cql-api
          BEANSTALK_APP_NAME: cql-api
          BEANSTALK_APP_ENVIRONMENT: cql-api-main
        run: |
          echo "{\"AWSEBDockerrunVersion\":\"1\",\"Image\":{\"Name\":\"${IMAGE_FULL}\",\"Update\": \"true\"},\"Ports\":[{\"ContainerPort\":80}]}" > ${IMAGE_TAG}.aws.json
          aws s3 cp ${IMAGE_TAG}.aws.json "s3://${S3_BUCKET}/${IMAGE_TAG}.aws.json"
          aws elasticbeanstalk create-application-version --application-name "${BEANSTALK_APP_NAME}" --version-label "${IMAGE_TAG}" --source-bundle "S3Bucket=${S3_BUCKET},S3Key=${IMAGE_TAG}.aws.json"
          aws elasticbeanstalk update-environment --environment-name "${BEANSTALK_APP_ENVIRONMENT}" --version-label "${IMAGE_TAG}"